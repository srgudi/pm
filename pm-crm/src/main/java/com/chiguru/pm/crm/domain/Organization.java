package com.chiguru.pm.crm.domain;
import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

// Generated Jun 9, 2010 9:02:16 PM by Hibernate Tools 3.3.0.GA
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;



/**
 * Organization generated by hbm2java
 */
@Entity
@Table(name = "organization")
@NamedQueries({@NamedQuery(name = "organization.firm_list",query = "from Organization")   
})
public class Organization implements java.io.Serializable {
    private Long id;
    private OrganizationType organizationType;

    //private OrganizationType organizationSubType;
    private Party party;
   /* @NotEmpty //we have commented them as they created an issue in other pages such as adminFirmModule. 
    @Size(min = 0, max = 50)
    @Pattern(regexp ="^[a-zA-Z.\\s]*$")*/
    private String name;
    
//    @NotEmpty
//    @Size(min = 0, max = 50)
//    @Pattern(regexp ="^[a-zA-Z.\\s]*$")
    private String legalName;
    
    private String operatingName;
    
    private Long formOfBusiness;
    
//    @NotEmpty //we have commented them as they created an issue in other pages such as adminFirmModule. 
//    @Size(min = 100000000, max = 999999999)
    private String businessIdentificationNumber;
    
//    @DateTimeFormat(pattern = "MM/dd/yyyy")//we have commented them as they created an issue in other pages such as adminFirmModule. 
    private Date incorporationDate;
//    @NotEmpty//we have commented them as they created an issue in other pages such as adminFirmModule. 
//    @Size(min = 0, max = 15)
//    @NumberFormat(style = Style.NUMBER)
    private String incorporationNumber;
//    @NotEmpty //we have commented them as they created an issue in other pages such as adminFirmModule. 
//    @Pattern(regexp ="^(0[1-9]|1[012])[- /.](0[1-9]|[12][0-9]|3[01])$")
    private String yearEndDate;
   	private Long industryType;
    private Long industrySubtype;
//    @Size(min = 0, max = 1000)//we have commented them as they created an issue in other pages such as adminFirmModule. 
    private String authorizedCapital;
//    @Size(min = 0, max = 1000)//we have commented them as they created an issue in other pages such as adminFirmModule. 
    private String issuedCaptial;
    private String lastUpdateUserid;
    private Long inChargePerson;
    private String emailAddress;
    private String contactNumber;
    
    /*public String lastUpdateUserId;
    public Date lastUpdateDate;*/

    public Organization() {
    }

    public Organization(Party party) {
        this.party = party;
    }

    public Organization(OrganizationType organizationType, Party party,
        String name, String legalName, String operatingName,
        Long formOfBusiness, String businessIdentificationNumber,
        Date incorporationDate, String incorporationNumber, String yearEndDate,
        Long industryType, Long industrySubtype, String authorizedCapital,
        String issuedCaptial, String lastUpdateUserid,String emailAddress,String contactNumber) {
        this.organizationType = organizationType;
        this.party = party;
        this.name = name;
        this.legalName = legalName;
        this.operatingName = operatingName;
        this.formOfBusiness = formOfBusiness;
        this.businessIdentificationNumber = businessIdentificationNumber;
        this.incorporationDate = incorporationDate;
        this.incorporationNumber = incorporationNumber;
        this.yearEndDate = yearEndDate;
        this.industryType = industryType;
        this.industrySubtype = industrySubtype;
        this.authorizedCapital = authorizedCapital;
        this.issuedCaptial = issuedCaptial;
        this.lastUpdateUserid = lastUpdateUserid;
        this.emailAddress = emailAddress;
        this.contactNumber = contactNumber;
    }

    public Organization(OrganizationType orgType, String name,
        String createUserId) {
        this.organizationType = orgType;
        this.name = name;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "party")
    )
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "party_id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    /*@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "organization_subtype")
    @Cascade({org.hibernate.annotations.CascadeType.DELETE})
    public OrganizationType getOrganizationSubType() {
            return organizationSubType;
    }
    
    public void setOrganizationSubType(OrganizationType organizationSubType) {
            this.organizationSubType = organizationSubType;
    }*/
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "organization_type")
    @Cascade({org.hibernate.annotations.CascadeType.DELETE
    })
    public OrganizationType getOrganizationType() {
        return this.organizationType;
    }

    public void setOrganizationType(OrganizationType organizationType) {
        this.organizationType = organizationType;
    }

    @OneToOne(fetch = FetchType.LAZY)
    @PrimaryKeyJoinColumn
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public Party getParty() {
        return this.party;
    }

    public void setParty(Party party) {
        this.party = party;
    }

    @Column(name = "name", length = 100)
    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @Column(name = "legal_name", length = 100)
    public String getLegalName() {
        return this.legalName;
    }

    public void setLegalName(String legalName) {
        this.legalName = legalName;
    }

    @Column(name = "operating_name", length = 100)
    public String getOperatingName() {
        return this.operatingName;
    }

    public void setOperatingName(String operatingName) {
        this.operatingName = operatingName;
    }

   /* @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "form_of_business")
    @Cascade({org.hibernate.annotations.CascadeType.DELETE
    })*/
    @Column(name = "form_of_business")
    public Long getFormOfBusiness() {
        return this.formOfBusiness;
    }

    public void setFormOfBusiness(Long formOfBusiness) {
        this.formOfBusiness = formOfBusiness;
    }

    @Column(name = "business_identification_number", length = 50)
    public String getBusinessIdentificationNumber() {
        return this.businessIdentificationNumber;
    }

    public void setBusinessIdentificationNumber(
        String businessIdentificationNumber) {
        this.businessIdentificationNumber = businessIdentificationNumber;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "incorporation_date", length = 10)
    public Date getIncorporationDate() {
        return this.incorporationDate;
    }

    public void setIncorporationDate(Date incorporationDate) {
        this.incorporationDate = incorporationDate;
    }

    @Column(name = "incorporation_number", length = 50)
    public String getIncorporationNumber() {
        return this.incorporationNumber;
    }

    public void setIncorporationNumber(String incorporationNumber) {
        this.incorporationNumber = incorporationNumber;
    }

    /*@Temporal(TemporalType.DATE)
    @Column(name = "year_end_date", length = 10)
    public Date getYearEndDate() {
        return yearEndDate;
    }

    public void setYearEndDate(Date yearEndDate) {
        this.yearEndDate = yearEndDate;
    }*/

    //@ManyToOne(fetch = FetchType.LAZY)
    //@JoinColumn(name = "industry_type")
    //@Cascade({org.hibernate.annotations.CascadeType.DELETE
    //})
    @Column(name = "industry_type")
    public Long getIndustryType() {
        return this.industryType;
    }

    public void setIndustryType(Long industryType) {
        this.industryType = industryType;
    }

   /* @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "industry_subtype")
    @Cascade({org.hibernate.annotations.CascadeType.DELETE
    })*/
    @Column(name = "industry_subtype")
    public Long getIndustrySubtype() {
        return this.industrySubtype;
    }

    public void setIndustrySubtype(Long industrySubtype) {
        this.industrySubtype = industrySubtype;
    }

    @Column(name = "authorized_capital", length = 4000)
    public String getAuthorizedCapital() {
        return this.authorizedCapital;
    }

    public void setAuthorizedCapital(String authorizedCapital) {
        this.authorizedCapital = authorizedCapital;
    }

    @Column(name = "issued_captial", length = 4000)
    public String getIssuedCaptial() {
        return this.issuedCaptial;
    }

    public void setIssuedCaptial(String issuedCaptial) {
        this.issuedCaptial = issuedCaptial;
    }

    @Column(name = "last_update_userid", length = 30)
    public String getLastUpdateUserid() {
        return this.lastUpdateUserid;
    }

    public void setLastUpdateUserid(String lastUpdateUserid) {
        this.lastUpdateUserid = lastUpdateUserid;
    }

    /**
     * @return the inChargePerson
     */
    @Column(name = "in_charge_person")
    public Long getInChargePerson() {
        return inChargePerson;
    }

    /**
     * @param inChargePerson the inChargePerson to set
     */
    public void setInChargePerson(Long inChargePerson) {
        this.inChargePerson = inChargePerson;
    }
    

    @Column(name = "year_end_date", length = 10)
    public String getYearEndDate() {
		return yearEndDate;
	}

	public void setYearEndDate(String yearEndDate) {
		this.yearEndDate = yearEndDate;
	}

	@Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = (prime * result) + ((id == null) ? 0 : id.hashCode());

        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (obj == null) {
            return false;
        }

        if (!(obj instanceof Organization)) {
            return false;
        }

        Organization other = (Organization) obj;

        if (!id.equals(other.id)) {
            return false;
        }

        return true;
    }

	public void setEmailAddress(String emailAddress) {
		this.emailAddress = emailAddress;
	}

	@Column(name = "email_address", length = 100)
	public String getEmailAddress() {
		return emailAddress;
	}

	public void setContactNumber(String contactNumber) {
		this.contactNumber = contactNumber;
	}

	@Column(name = "contact_number", length = 100)
	public String getContactNumber() {
		return contactNumber;
	}

}
