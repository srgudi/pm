package com.chiguru.pm.crm.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;

import org.hibernate.annotations.Cascade;

// Generated Jun 13, 2010 9:40:40 PM by Hibernate Tools 3.3.0.GA
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;


/**
 * PartyRelationship generated by hbm2java
 */
@Entity
@Table(name = "party_relationship")
@NamedQueries({@NamedQuery(name = "relationship.findclients_by_object_id",query = "select partyBySubject from PartyRelationship rel where rel.partyByObject.id =? and rel.relationshipType.id=? and rel.partyBySubject.activeFlag=true")
    , @NamedQuery(name = "relationship.findclients_by_object_id_with_order",query = "select partyBySubject from PartyRelationship rel where rel.partyByObject.id =? and rel.relationshipType.id=? order by ?")
    , @NamedQuery(name = "relationship.findclients_count_by_object_id",query = "select count(partyBySubject.id) from PartyRelationship rel where rel.partyByObject.id =? and rel.relationshipType.id=?")
    , @NamedQuery(name = "relationship.findrelationship_by_object_id_and_subject_id",query = "select relationship from PartyRelationship relationship where " +
    "relationship.partyByObject.id =? and relationship.partyBySubject.id =? and " +
    "relationship.relationshipType.id=?"),
    @NamedQuery(name = "relationship.findclients_by_subject_id",query = "select partyByObject from PartyRelationship rel where rel.partyBySubject.id =? and rel.partyByObject.activeFlag=true"),
    @NamedQuery(name = "relationship.findclients_by_both_id",query = "select partyByObject from PartyRelationship rel where rel.partyBySubject.id =? and rel.partyByObject.id =? and rel.relationshipType.id=? and rel.partyByObject.activeFlag=true")
})
public class PartyRelationship extends PersistentEntity implements java.io.Serializable {
    //private Long id;
    private Party partyByObject;
    private RelationshipType relationshipType;
    private Party partyBySubject;
    private String relationshipName;

    public PartyRelationship() {
    }

    public PartyRelationship(Party partyByObject,
        RelationshipType relationshipType, Party partyBySubject) {
        this.partyByObject = partyByObject;
        this.relationshipType = relationshipType;
        this.partyBySubject = partyBySubject;
    }

    public PartyRelationship(Party partyByObject,
        RelationshipType relationshipType, Party partyBySubject,
        String relationshipName) {
        this.partyByObject = partyByObject;
        this.relationshipType = relationshipType;
        this.partyBySubject = partyBySubject;
        this.relationshipName = relationshipName;
    }

    /*@Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
            return this.id;
    }
    
    public void setId(Long id) {
            this.id = id;
    }
    */
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "object", nullable = false)
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public Party getPartyByObject() {
        return this.partyByObject;
    }

    public void setPartyByObject(Party partyByObject) {
        this.partyByObject = partyByObject;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "relationship_type", nullable = false)
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public RelationshipType getRelationshipType() {
        return this.relationshipType;
    }

    public void setRelationshipType(RelationshipType relationshipType) {
        this.relationshipType = relationshipType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "subject", nullable = false)
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public Party getPartyBySubject() {
        return this.partyBySubject;
    }

    public void setPartyBySubject(Party partyBySubject) {
        this.partyBySubject = partyBySubject;
    }

    @Column(name = "relationship_name")
    public String getRelationshipName() {
        return this.relationshipName;
    }

    public void setRelationshipName(String relationshipName) {
        this.relationshipName = relationshipName;
    }
}
