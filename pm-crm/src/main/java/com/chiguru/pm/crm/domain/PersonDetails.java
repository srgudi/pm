package com.chiguru.pm.crm.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.LazyToOne;
import org.hibernate.annotations.LazyToOneOption;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.NumberFormat;
import org.springframework.format.annotation.NumberFormat.Style;

// Generated Jun 22, 2010 1:47:06 PM by Hibernate Tools 3.3.0.GA
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Pattern;
import javax.validation.constraints.Size;


/**
 * PersonDetails generated by hbm2java
 */
@Entity
@Table(name = "person_details")
public class PersonDetails extends PersistentEntity implements java.io.Serializable {
    //private Long id;
    private Code codeByDepartmentCode;
    @Valid
    private Person person;
    
   // @NotNull
    private Code codeByJobTitleCode;
    private String jobTitle;
    private String departmentName;
    
//    @NotEmpty
  //  @NumberFormat(style = Style.NUMBER)
    private Long noOfSharesOwned;
    
//    @Size(min = 0, max = 50)
//    @Pattern(regexp =" ")
    private String annualCompensation;
    private String comittee;
    private Boolean isDirector;
    private Boolean isStaff;
    private Code codeTypeOfShare;

    public PersonDetails() {
    }

    public PersonDetails(Code codeByDepartmentCode, Person person,
        Code codeByJobTitleCode, String jobTitle, String departmentName,
        Long noOfSharesOwned, String annualCompensation, String comittee,
        Boolean isDirector) {
        this.codeByDepartmentCode = codeByDepartmentCode;
        this.person = person;
        this.codeByJobTitleCode = codeByJobTitleCode;
        this.jobTitle = jobTitle;
        this.departmentName = departmentName;
        this.noOfSharesOwned = noOfSharesOwned;
        this.annualCompensation = annualCompensation;
        this.comittee = comittee;
        this.isDirector = isDirector;
    }

    /*        @Id
            @GeneratedValue(strategy = IDENTITY)
            @Column(name = "id", unique = true, nullable = false)
            public Long getId() {
                    return this.id;
            }
    
            public void setId(Long id) {
                    this.id = id;
            }*/
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "department_code")
    public Code getCodeByDepartmentCode() {
        return this.codeByDepartmentCode;
    }

    public void setCodeByDepartmentCode(Code codeByDepartmentCode) {
        this.codeByDepartmentCode = codeByDepartmentCode;
    }

    @OneToOne(fetch = FetchType.LAZY, optional=false)
    @JoinColumn(name = "party_id")
    @LazyToOne(value = LazyToOneOption.NO_PROXY)
    public Person getPerson() {
        return this.person;
    }

    public void setPerson(Person person) {
        this.person = person;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "job_title_code")
    public Code getCodeByJobTitleCode() {
        return this.codeByJobTitleCode;
    }

    public void setCodeByJobTitleCode(Code codeByJobTitleCode) {
        this.codeByJobTitleCode = codeByJobTitleCode;
    }

    @Column(name = "job_title", length = 100)
    public String getJobTitle() {
        return this.jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    @Column(name = "department_name", length = 100)
    public String getDepartmentName() {
        return this.departmentName;
    }

    public void setDepartmentName(String departmentName) {
        this.departmentName = departmentName;
    }

    @Column(name = "no_of_shares_owned")
    public Long getNoOfSharesOwned() {
        return this.noOfSharesOwned;
    }

    public void setNoOfSharesOwned(Long noOfSharesOwned) {
        this.noOfSharesOwned = noOfSharesOwned;
    }

    @Column(name = "annual_compensation", length = 25)
    public String getAnnualCompensation() {
        return this.annualCompensation;
    }

    public void setAnnualCompensation(String annualCompensation) {
        this.annualCompensation = annualCompensation;
    }

    @Column(name = "comittee", length = 25)
    public String getComittee() {
        return this.comittee;
    }

    public void setComittee(String comittee) {
        this.comittee = comittee;
    }

    @Column(name = "is_director")
    public Boolean getIsDirector() {
        return this.isDirector;
    }

    public void setIsDirector(Boolean isDirector) {
        this.isDirector = isDirector;
    }

    @Column(name = "is_staff")
    public Boolean getIsStaff() {
        return isStaff;
    }

    public void setIsStaff(Boolean isStaff) {
        this.isStaff = isStaff;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "type_of_share")
    public Code getCodeTypeOfShare() {
        return codeTypeOfShare;
    }

    public void setCodeTypeOfShare(Code codeTypeOfShare) {
        this.codeTypeOfShare = codeTypeOfShare;
    }
}
