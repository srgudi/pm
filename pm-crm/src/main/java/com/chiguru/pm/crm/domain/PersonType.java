package com.chiguru.pm.crm.domain;

import com.chiguru.pm.core.common.domain.ReadOnlyEntity;

// Generated Jun 9, 2010 9:02:16 PM by Hibernate Tools 3.3.0.GA
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.validator.constraints.NotEmpty;

/**
 * PersonType generated by hbm2java
 */
@Entity
@Table(name = "person_type")
public class PersonType extends ReadOnlyEntity implements java.io.Serializable {
    public static final PersonType PERSON_TYPE_STAFF = new PersonType(1);
    public static final PersonType PERSON_TYPE_PARTNER = new PersonType(2);
    public static final PersonType PERSON_TYPE_INSURANCE_AGENT = new PersonType(3);
    public static final PersonType PERSON_TYPE_LAWYER = new PersonType(4);
    public static final PersonType PERSON_TYPE_FIRM_ADMIN = new PersonType(7);
    public static final PersonType PERSON_TYPE_CLIENT_STAFF= new PersonType(8);
    //	private Integer id;
    @NotEmpty
    private String type;
    private Set<Person> persons = new HashSet<Person>(0);

    public PersonType() {
    }

    public PersonType(Integer id) {
        this.id = id;
    }

    public PersonType(Integer id, String type) {
        this.id = id;
        this.type = type;
    }

    public PersonType(Integer id, String type, Set<Person> persons) {
        this.id = id;
        this.type = type;
        this.persons = persons;
    }

    //	@Id
    //	@Column(name = "id", unique = true, nullable = false)
    //	public Integer getId() {
    //		return this.id;
    //	}
    //
    //	public void setId(Integer id) {
    //		this.id = id;
    //	}
    @Column(name = "type", nullable = false, length = 50)
    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "personType")
    public Set<Person> getPersons() {
        return this.persons;
    }

    public void setPersons(Set<Person> persons) {
        this.persons = persons;
    }
}
