package com.chiguru.pm.crm.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;

import org.hibernate.annotations.ForceDiscriminator;
import org.hibernate.validator.constraints.NotEmpty;
import org.springframework.format.annotation.NumberFormat;
import org.springframework.format.annotation.NumberFormat.Style;

// Generated Feb 10, 2011 11:10:04 PM by Hibernate Tools 3.3.0.GA
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;


/**
 * Communication generated by hbm2java
 */
@Entity
@Table(name = "share")
@ForceDiscriminator
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "share_type", discriminatorType = DiscriminatorType.INTEGER)
public class Share extends PersistentEntity implements java.io.Serializable {
   
    protected PointOfContact pointOfContact;
 
    private Boolean preferredFlag;
    private Integer subType;
    public Share() {

    }

    public Share(Long id) {
        this.id = id;
    }

    public Share(PointOfContact pointOfContact) {
        this.pointOfContact = pointOfContact;
    }

    @Column(name = "sub_type")
    public Integer getSubType() {
        return subType;
    }

    public void setSubType(Integer subType) {
        this.subType = subType;
    }

    public void setPointOfContact(PointOfContact pointOfContact) {
        this.pointOfContact = pointOfContact;
    }

   
    @Column(name = "preferred_flag")
    public Boolean getPreferredFlag() {
        return this.preferredFlag;
    }

    public void setPreferredFlag(Boolean preferredFlag) {
        this.preferredFlag = preferredFlag;
    }
}
