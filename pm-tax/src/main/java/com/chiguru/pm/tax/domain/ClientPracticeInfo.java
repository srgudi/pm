package com.chiguru.pm.tax.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;
import com.chiguru.pm.crm.domain.Code;
import com.chiguru.pm.crm.domain.Jurisdiction;
import com.chiguru.pm.crm.domain.Organization;
import com.chiguru.pm.crm.domain.Party;
import com.chiguru.pm.crm.domain.Person;

import org.hibernate.annotations.Cascade;

// Generated Dec 6, 2010 12:16:20 AM by Hibernate Tools 3.3.0.GA
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;


/**
 * TaxClientPracticeInfo generated by hbm2java
 */
@Entity
@Table(name = "tax_client_practice_info")
public class ClientPracticeInfo extends PersistentEntity implements java.io.Serializable {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	//private Long id;
    private FirmPracticeType firmPracticeType;
    private Organization firm;
    private Party client;
    private Person clientStaffInCharge;
    private Person staffInCharge;
    private Long partnerInCharge;
    private Jurisdiction jurisdiction;
    private Long filingFrequency;
    private boolean filingDateReminder;
    private Long instalmentFrequency;
    private boolean instalmentReminder;
    private String preparerNotes;
    private String internalMemo;
    private String filingDateRule;
    private String practiceName;
    private List<FilingReminderRule> filingReminderRules = new ArrayList<FilingReminderRule>(0);
    private List<InstallmentReminderRule> installmentReminderRules = new ArrayList<InstallmentReminderRule>(0);
    private List<FilingDueDateRule> filingDueDateRules = new ArrayList<FilingDueDateRule>(0);
    private List<InstallmentDueDateRule> installmentDueDateRules = new ArrayList<InstallmentDueDateRule>(0);
    private Map<FilingDueDateRule, Code> filingDueDateRuleMap = new HashMap();

    public ClientPracticeInfo() {
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "clientPracticeInfo")
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public List<InstallmentDueDateRule> getInstallmentDueDateRules() {
        return installmentDueDateRules;
    }

    public void setInstallmentDueDateRules(
        List<InstallmentDueDateRule> installmentDueDateRules) {
        this.installmentDueDateRules = installmentDueDateRules;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "clientPracticeInfo")
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public List<FilingDueDateRule> getFilingDueDateRules() {
        return filingDueDateRules;
    }

    public void setFilingDueDateRules(
        List<FilingDueDateRule> filingDueDateRules) {
        this.filingDueDateRules = filingDueDateRules;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "firm_id")
    public Organization getFirm() {
        return this.firm;
    }

    public void setFirm(Organization firm) {
        this.firm = firm;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "client_staff_in_charge")
    public Person getClientStaffInCharge() {
        return this.clientStaffInCharge;
    }

    public void setClientStaffInCharge(Person clientStaffInCharge) {
        this.clientStaffInCharge = clientStaffInCharge;
    }
    
    
    /**
	 * @return the partnerInCharge
	 */
    @Column(name = "partner_in_charge")
	public Long getPartnerInCharge() {
		return partnerInCharge;
	}

	/**
	 * @param partnerInCharge the partnerInCharge to set
	 */
	public void setPartnerInCharge(Long partnerInCharge) {
		this.partnerInCharge = partnerInCharge;
	}

	@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "client", nullable = false)
    public Party getClient() {
        return this.client;
    }

    public void setClient(Party party) {
        this.client = party;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "staff_in_charge", nullable = false)
    public Person getStaffInCharge() {
        return this.staffInCharge;
    }

    public void setStaffInCharge(Person staffInCharge) {
        this.staffInCharge = staffInCharge;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "tax_firm_practice_type", nullable = false)
    public FirmPracticeType getFirmPracticeType() {
        return this.firmPracticeType;
    }

    public void setFirmPracticeType(FirmPracticeType firmPracticeType) {
        this.firmPracticeType = firmPracticeType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "jurisdiction", nullable = false)
    public Jurisdiction getJurisdiction() {
        return this.jurisdiction;
    }

    public void setJurisdiction(Jurisdiction jurisdiction) {
        this.jurisdiction = jurisdiction;
    }

    @Column(name = "filing_frequency", nullable = false)
    public Long getFilingFrequency() {
        return this.filingFrequency;
    }

    public void setFilingFrequency(Long filingFrequency) {
        this.filingFrequency = filingFrequency;
    }

    @Column(name = "filing_date_reminder", nullable = false)
    public boolean isFilingDateReminder() {
        return this.filingDateReminder;
    }

    public void setFilingDateReminder(boolean filingDateReminder) {
        this.filingDateReminder = filingDateReminder;
    }

    @Column(name = "instalment_frequency")
    public Long getInstalmentFrequency() {
        return this.instalmentFrequency;
    }

    public void setInstalmentFrequency(Long instalmentFrequency) {
        this.instalmentFrequency = instalmentFrequency;
    }

    @Column(name = "instalment_reminder", nullable = false)
    public boolean isInstalmentReminder() {
        return this.instalmentReminder;
    }

    public void setInstalmentReminder(boolean instalmentReminder) {
        this.instalmentReminder = instalmentReminder;
    }

    @Column(name = "preparer_notes", length = 4000)
    public String getPreparerNotes() {
        return this.preparerNotes;
    }

    public void setPreparerNotes(String preparerNotes) {
        this.preparerNotes = preparerNotes;
    }

    @Column(name = "internal_memo", length = 4000)
    public String getInternalMemo() {
        return this.internalMemo;
    }

    public void setInternalMemo(String internalMemo) {
        this.internalMemo = internalMemo;
    }

    @Column(name = "filing_date_rule", length = 50)
    public String getFilingDateRule() {
        return this.filingDateRule;
    }

    public void setFilingDateRule(String filingDateRule) {
        this.filingDateRule = filingDateRule;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "clientPracticeInfo")
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public List<FilingReminderRule> getFilingReminderRules() {
        return this.filingReminderRules;
    }

    public void setFilingReminderRules(
        List<FilingReminderRule> filingReminderRules) {
        this.filingReminderRules = filingReminderRules;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "clientPracticeInfo")
    @Cascade({org.hibernate.annotations.CascadeType.ALL
    })
    public List<InstallmentReminderRule> getInstallmentReminderRules() {
        return this.installmentReminderRules;
    }

    public void setInstallmentReminderRules(
        List<InstallmentReminderRule> installmentReminderRules) {
        this.installmentReminderRules = installmentReminderRules;
    }

    @Column(name = "partice_name")
    public String getPracticeName() {
        return practiceName;
    }

    /**
     * @param practiceName the practiceName to set
     */
    public void setPracticeName(String practiceName) {
        this.practiceName = practiceName;
    }
}
