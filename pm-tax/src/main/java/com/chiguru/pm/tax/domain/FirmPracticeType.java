package com.chiguru.pm.tax.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;
import com.chiguru.pm.crm.domain.Organization;

import org.hibernate.annotations.Cascade;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

// Generated Dec 6, 2010 12:16:20 AM by Hibernate Tools 3.3.0.GA
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Version;
import javax.validation.Valid;


/**
 * TaxFirmPracticeType generated by hbm2java
 */
@Entity
@Table(name = "tax_firm_practice_type")
@NamedQueries({@NamedQuery(name = "firmPracticeType.findPracticeByFirmId",query = "from FirmPracticeType firmPractiveType where " +
    "firmPractiveType.organization.id =? and activeFlag=true"),
    @NamedQuery(name = "firmPracticeType.findPracticeTypeById",query = "from FirmPracticeType firmPractiveType where " +
    "firmPractiveType.id =? and activeFlag=true")
})
public class FirmPracticeType extends PersistentEntity implements java.io.Serializable {
//    private Long id;
    
    @Valid
    private PracticeType taxApplicationPracticeType;
    private Organization organization;
//    public boolean activeFlag;
//    public Date createDate = new Date();
//    public String createUserId;
//    public String lastUpdateUserId;
//    public Date lastUpdateDate;
//    public Integer version;

    public FirmPracticeType() {
    }

    public FirmPracticeType(PracticeType taxApplicationPracticeType,
        Organization organization) {
        this.taxApplicationPracticeType = taxApplicationPracticeType;
        this.organization = organization;
    }

    /*@Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Long getId() {
        return this.id;
    }

    public void setId(Long id) {
        this.id = id;
    }*/

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "practice_id", nullable = false)
    @Cascade({org.hibernate.annotations.CascadeType.SAVE_UPDATE
    })
    public PracticeType getTaxApplicationPracticeType() {
        return this.taxApplicationPracticeType;
    }

    public void setTaxApplicationPracticeType(
        PracticeType taxApplicationPracticeType) {
        this.taxApplicationPracticeType = taxApplicationPracticeType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "firm_id", nullable = false)
    public Organization getOrganization() {
        return this.organization;
    }

    public void setOrganization(Organization organization) {
        this.organization = organization;
    }

    /*@Column(name = "active_flag", nullable = false)
    public boolean isActiveFlag() {
        return this.activeFlag;
    }

    public void setActiveFlag(boolean activeFlag) {
        this.activeFlag = activeFlag;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "create_date", nullable = false, length = 19)
    public Date getCreateDate() {
        return this.createDate;
    }

    public void setCreateDate(Date createDate) {
        this.createDate = createDate;
    }

    @Column(name = "create_user_id", nullable = false, length = 25)
    public String getCreateUserId() {
        return this.createUserId;
    }

    public void setCreateUserId(String createUserId) {
        this.createUserId = createUserId;
    }

    @Column(name = "last_update_user_id", length = 30)
    public String getLastUpdateUserId() {
        return this.lastUpdateUserId;
    }

    public void setLastUpdateUserId(String lastUpdateUserId) {
        this.lastUpdateUserId = lastUpdateUserId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "last_update_date", length = 19)
    public Date getLastUpdateDate() {
        return this.lastUpdateDate;
    }

    public void setLastUpdateDate(Date lastUpdateDate) {
        this.lastUpdateDate = lastUpdateDate;
    }

    @Version
    @Column(name = "version")
    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }*/
}
