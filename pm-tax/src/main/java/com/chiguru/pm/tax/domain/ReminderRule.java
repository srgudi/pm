package com.chiguru.pm.tax.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;
import com.chiguru.pm.crm.domain.Code;

import org.hibernate.annotations.ForceDiscriminator;

// Generated Dec 29, 2010 10:46:55 PM by Hibernate Tools 3.3.0.GA
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;


/**
 * TaxInfoReminder generated by hbm2java
 */
@Entity
@ForceDiscriminator
@Table(name = "tax_info_reminder")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "filing_type", discriminatorType = DiscriminatorType.INTEGER)
public class ReminderRule extends PersistentEntity implements java.io.Serializable {
    protected Short reminderDay;
    protected Code reminderDayCode;

    //protected TaxInfoFilingType filingType;
    protected ClientPracticeInfo clientPracticeInfo;

    public ReminderRule() {
    }

    @Column(name = "reminder_day")
    public Short getReminderDay() {
        return this.reminderDay;
    }

    public void setReminderDay(Short reminderDay) {
        this.reminderDay = reminderDay;
    }
    
    public void setReminderDayCode(Code reminderDayCode) {
        this.reminderDayCode = reminderDayCode;
    }

    /*@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "filing_type", nullable = false)
    public TaxInfoFilingType getFilingType() {
            return this.filingType;
    }
    
    public void setFilingType(TaxInfoFilingType filingType) {
            this.filingType = filingType;
    }
    */

    /*@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "practice_info_id", nullable = false)
    public ClientPracticeInfo getClientPracticeInfo() {
            return this.clientPracticeInfo;
    }*/
    public void setClientPracticeInfo(ClientPracticeInfo clientPracticeInfo) {
        this.clientPracticeInfo = clientPracticeInfo;
    }
    
    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (obj == null) {
            return false;
        }
        
        if(obj instanceof Code){
        	//hack for the checkboxes
        	Code other = (Code) obj;
        	if(this.reminderDayCode == null || other.id ==null){
        		return false;
        	}else if(this.reminderDayCode.equals(other)){
        		return true;
        	}
        }

        if (!(obj instanceof PersistentEntity)) {
            return false;
        }

        PersistentEntity other = (PersistentEntity) obj;
        
        if ((id == null) || (other.id == null)) {
            return false;
        } else if (!id.equals(other.id)) {
            return false;
        }

        return true;
    }
}
