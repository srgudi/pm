package com.chiguru.pm.tax.domain;

import com.chiguru.pm.core.common.domain.PersistentEntity;
import com.chiguru.pm.crm.domain.Code;

// Generated Dec 29, 2010 10:46:55 PM by Hibernate Tools 3.3.0.GA
import javax.persistence.Column;
import javax.persistence.DiscriminatorColumn;
import javax.persistence.DiscriminatorType;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;


/**
 * TaxInfoReminder generated by hbm2java
 */
@Entity
@Table(name = "tax_info_reminder")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "filing_type", discriminatorType = DiscriminatorType.INTEGER)
public class TaxInfoReminder extends PersistentEntity implements java.io.Serializable {
    private Short reminderDay;
    private TaxInfoFilingType filingType;
    private ClientPracticeInfo clientPracticeInfo;
    private Code codeReminder;

    public TaxInfoReminder() {
    }

    public TaxInfoReminder(Short reminderDay, TaxInfoFilingType filingType,
        Long practiceInfoId) {
        this.reminderDay = reminderDay;
        this.filingType = filingType;
    }

    /*@ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "reminder_day")
    public Code getCodeReminder() {
            return this.codeReminder;
    }
    
    public void setCodeReminder(Code codeReminder) {
            this.codeReminder = codeReminder;
    }*/
    @Column(name = "reminder_day")
    public Short getReminderDay() {
        return this.reminderDay;
    }

    public void setReminderDay(Short reminderDay) {
        this.reminderDay = reminderDay;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "filing_type", nullable = false)
    public TaxInfoFilingType getFilingType() {
        return this.filingType;
    }

    public void setFilingType(TaxInfoFilingType filingType) {
        this.filingType = filingType;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "practice_info_id", nullable = false)
    public ClientPracticeInfo getClientPracticeInfo() {
        return this.clientPracticeInfo;
    }

    public void setClientPracticeInfo(ClientPracticeInfo clientPracticeInfo) {
        this.clientPracticeInfo = clientPracticeInfo;
    }
}
